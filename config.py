import os
from dotenv import load_dotenv

load_dotenv()

class Config:
    """–ö–ª–∞—Å—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞"""
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    BOT_TOKEN = os.getenv('BOT_TOKEN')
    PREFIX = os.getenv('PREFIX', '!')
    
    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    DATABASE_URL = os.getenv('DATABASE_URL', 'interserver_bot.db')
    
    # –ú–æ–¥–µ—Ä–∞—Ü–∏—è
    ENABLE_PROFANITY_FILTER = os.getenv('ENABLE_PROFANITY_FILTER', 'true').lower() == 'true'
    ENABLE_SPAM_PROTECTION = os.getenv('ENABLE_SPAM_PROTECTION', 'true').lower() == 'true'
    SPAM_THRESHOLD = int(os.getenv('SPAM_THRESHOLD', '5'))
    SPAM_TIME_WINDOW = int(os.getenv('SPAM_TIME_WINDOW', '10'))  # —Å–µ–∫—É–Ω–¥—ã
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    MAX_MESSAGE_LENGTH = int(os.getenv('MAX_MESSAGE_LENGTH', '2000'))
    MAX_CONNECTIONS_PER_SERVER = int(os.getenv('MAX_CONNECTIONS_PER_SERVER', '10'))
    MAX_FILE_SIZE = int(os.getenv('MAX_FILE_SIZE', '8388608'))  # 8 MB –≤ –±–∞–π—Ç–∞—Ö
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    BLOCKED_DOMAINS = [
        'bit.ly', 'tinyurl.com', 'grabify.link', 'iplogger.org',
        '2no.co', 'cutt.ly', 'discord.gift', 'discordnitro.info'
    ]
    
    # –ù–µ—Ü–µ–Ω–∑—É—Ä–Ω–∞—è –ª–µ–∫—Å–∏–∫–∞ (–±–∞–∑–æ–≤—ã–π —Å–ø–∏—Å–æ–∫)
    PROFANITY_WORDS = [
        # –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å
        # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ —Ñ–∞–π–ª–∞
    ]
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    MAX_RETRIES = int(os.getenv('MAX_RETRIES', '3'))
    RETRY_DELAY = int(os.getenv('RETRY_DELAY', '1'))
    
    # –≠–º–æ–¥–∑–∏ –¥–ª—è UI
    EMOJI = {
        'success': '‚úÖ',
        'error': '‚ùå',
        'warning': '‚ö†Ô∏è',
        'info': '‚ÑπÔ∏è',
        'loading': '‚è≥',
        'link': 'üîó',
        'server': 'üè†',
        'channel': 'üìù',
        'user': 'üë§',
        'admin': 'üëë',
        'mod': 'üõ°Ô∏è',
        'bot': 'ü§ñ',
        'stats': 'üìä',
        'settings': '‚öôÔ∏è',
        'trash': 'üóëÔ∏è'
    }
    
    # –¶–≤–µ—Ç–∞ –¥–ª—è embed
    COLORS = {
        'success': 0x00ff00,
        'error': 0xff0000,
        'warning': 0xffaa00,
        'info': 0x0099ff,
        'default': 0x7289da
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    @classmethod
    def validate(cls):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        errors = []
        
        if not cls.BOT_TOKEN:
            errors.append("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        if errors:
            raise ValueError(f"–û—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {', '.join(errors)}")
        
        return True

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
try:
    Config.validate()
except ValueError as e:
    print(f"‚ùå {e}")
    exit(1)